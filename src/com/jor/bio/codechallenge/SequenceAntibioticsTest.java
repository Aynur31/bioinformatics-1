package com.jor.bio.codechallenge;

import java.awt.datatransfer.StringSelection;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.Assert;
import org.junit.BeforeClass;
import org.junit.Test;

public class SequenceAntibioticsTest {

	private static final String CODON_TABLE_FILE = "RNA_codon_table_1.txt";
	private static final String MASS_TABLE_FILE = "Integer_mass_table.txt";
	private static Map<String, String> codonTable;
	private static Map<String, Integer> massTable;
	
	
	@BeforeClass
	public static void loadCodonTable() {
		codonTable = readCodonTable();
		massTable = readMassTable();
	}
	
	@Test
	public void readCodonTableTest() {
	}
	
	@Test
	public void peptideTranslationTest() {
		String dna = "GTGAAACTTTTTCCTTGGTTTAATCAATAT";
		System.out.println("\nPeptide Translation");
		System.out.println(peptideTranslation(dna));
	}
	
	@Test
	public void proteinTranslationTest() {
		String input = "AUGGCCAUGGCGCCCAGAACUGAGAUCAAUAGUACCCGUAUUAACGGGUGA";
		String output = proteinTranslation(input);
		Assert.assertEquals("MAMAPRTEINSTRING", output.replace("*", ""));

		String exraDataSet = "AUGCCCAUGGGAUUAGUGUGGCACAAACAAGGACCACUAGAAAGGAUAUCUAUAAGAGGAGUAAUAGGAGUUAGGAGCGGGUAUAACGAAACCAUUCGAAGGAAUUGGGUCAUGUUAGUAAGUAAAAGCGCCUUAUUCGUAUCCACAUGCUGCCAAUGUAACCCCCCUUACCUGACUUGUUAUAAGCAGUUGAAGAGUCCAGACGUGACACGUUUUGCGCGCGCUCAUGACAUGGAUCAUUUUAGAGACCACACUCAUAUGGCUGGGAGGACCAACUUGGAACAAACGUUUUGUGCUCAACCCGUACAUCUGACUAUGGACCUAGAGUAUUAUCAGGACCCUCCAGUGGCUUAUGUACUACAGUACAUGGUGCCGAGGCGAAUGCCAGCUCUGUCAGUAAUCACGAAUCCUCCCAACCAAGAAUUGCAUUCACUCUGGUCAUAUCUGCAUUUGUCGGUUAGUCAAAUCUCUCGGGGGCGUCUAACUUGCGUGACGCUGCUACUAGUGAUCUGGGACAACCAUUUAUUACGGUACUCCUAUCUUUGCCAGGCCUUCGAAAUGGUUAUGAGCUCGAACAUCCGCUCCUUGGGAGCUGAGACGUUAAAGGUGUUAACAGAUCCGAAUAGAGAGUGCGCUUCGGUCACCAUCCCACAUCUCACUCAGCAAUCCGCUCUGAGUAUUAGAGCACCCCCCAGGUACCUUCACACUGAAUUACGGCGUUGUAGAACAUCUUUAGCACGGACGACCCUUCGGUUCGUGUCCAGUUGUACCUCUCGAUUUGGUGCUUCGAUUCCGAGCUUUCAUGAACUCUACUGCUCGCUAUACACAGGGCUCUCCUUCGUUCAUAUAUCUCGAUCAAUUAAGAACGCGGUUGAUCAAACAUGCGGCAAACCUAUCGACAAUACUCAGAUUGUGAUAAGCUUCCAGAGCUCUCGUCUCCAUCGAUGCAGUCUCAUAGCUCGUCUACAGGCCGACCGUACUUUCUUCCUUUAUAAGCGAGGGUGGUGCCGGGGCGUGUGCUCUAUAGUUAUAUACUUGACCGGGAUCUGCUACGUCAAACUGUGUUGUUACGCUACGGGCAUUAGCACCGUUAGCGACAGCUAUAAACCAAGGGGUUACGUUCAUCUUCAGGUAUUUCUCUUCCGACACGUGACUGUGUACGUAAUUCGUACAUAUGAGAAUUCAGUUACCGGGGCUUCACGAUAUCAAGCGGACUACAUCAUGGGGCGCGACUUACCUACUCUCGUAGAUAGUUUGCCAGUGGUGUCGUAUAGUUGGAACCAGUACCUGCUUCUAGUCUGUGGACCACGUCGGGGAGACCUCUUAUGGCCCCUAUUAGGCAGGGAUCCAACAGUUAAAUUUAAACCGCGGACCUACCGUCAACGGAGGAGUUUUACAGCUUUCAUGACGCGGAAGUGCGUUUCACUAUGGGCGCAAUUGACAGCUCGCCGUCGGACAAGCCGCAAAUUAAUUCGGGCACUAACUCACGGGUGGAAAAUGCGAAUGUCAAGACACGCAGUGGUCUAUACAGGCAUAGAGGGGAUCCUCGGGUCGAAAACAGAGUUAACGGUCCCAACUCAUCCGCUGUACAUCUUGCUCCCGUGCUCGGGUCCAAGUUGCGUGCUCAUGACUGGGGUCCGACCAUUUUGGUCUUCGUCCCAAGAUAGUCGUUGGUCAACAACCAUCAGGCCGGAGGGUGGUGUACUGAGCGUAAGUUGCAGACAGAUAGCCAAUAGCACCUUCUCGGUGCUCGAGUCAUUAGGUCUCUUUAUAGAAGUUCGGCACGGCCACGGGAAAAUCCCGCUCUACCGUAGCUCCACCUGUAGUAAUUGUUCACAUGUCUGUCAGUCUAAUGAGUGGACAGCGUGGUUCUUGAACUCCCCUGCGGCCGGGCCGAACCAGUGCCAAAUUGUUUAUAAUACGAAAUACUGUAUUGCAGGGUACGCCCCGAGCCCGUUACUAAGCACAGCCCGCGCAGCGAGUUAUCGAUAUAAAUGCUCGUGGUACUUCCUUCUUCUCUUUUUGACGUGUUCCCUCAUCUCGGGGCAAUUCUUGGAACCGGGGAUUAUGAAGUGUGCACUGGGCAUGCUAAAGGUAGGCUCGGAAUGCAAUCUCGAUGAACCGCACGUUAGUUCCACCGCGGGUUACCACGGCCACGUGAACACCCUCUGUUGCAUUAUUGCAGUUAGCCCGCCGCUAAGCCUGCGGGUUAAAAGACCGGCGGGGAGAGUUGUCUUCGAAAUAGGUCCCGCAUGUGAUCAGGACGGUGGUCAACUUGCGUCAAAUAUAGUGAUAACUCGUAAUCCGACUGGGUGGCACCCAUGGACUUCCCGAGUCAGCGCCCUUACCAUACGCUCACUACAAUGCCCACAGUGUGUGAACGAAGGCUGGCACUGGUCGCACCCUGAGCCAGGACAUAUGGGACGAUACUUGCACCCAAACUCAAUCCCUUACGAAGCCUGCGUCUCUACCUAUACAAUUGCCGAAAAAUUCUCGGUUCAUUUUAGUACCCGGAGCAUUGACUGGGAGUGCCCGGUCCGAAUACUCGCGACGUACACAAGACAGCUGGAGUUGCGUUGCCUUACCGGAACGUGCUUUUCCUACUGGAAUACCCCAAAGAUUCCUACGGUAACACCCCAUGUAGCACGGAAAUCUAAGGAGACUGACCGAAACGCCUCGAUUCAGCCCCCGAUGGCUGCUACGGUACCAGCAACAGGCUUAUCGAAGCAAUGGAUUGUCAUCCAAUCUUCCAGGGAUCUCCGGACUGACGAUGAGAUGGAUACCACCUUUCAGACACAUCGGUAUGGCUUCGGAAUAUCAACAACGGAGUGCUACACUCUACCGAGCCUAUACUCUGCCCCAAAGAGUAGAAAUACCCACACUUGUCACGCAUCGCCUUCCAACGAUAGUUGGUCCUGCUUCAAGCUCUGUGGAGUAAGUAUACGUGAUAGGAAAAGACGAGUCUGGACUGCUUCGCGAUGUAAUGACCUAGCGUCAGAAAAGGGUGGCCGGCAUGGUACACCACCCACAAGAAUCCCACCGUCGUUGCCUAGAAAAACGACACAGACUGGUGCAGCGAACCUAGCUUACUGGUCCCAGUUCAUUAACGGCGACAAAUCGCCGGAUGGCUAUACUAAGCAUGUUGGCACGGACGCCAUAUAUGCAGCGCGUGUUCAAGCGCACAGCCUGACGUGCUCCCGGCUAUCCAGAAUUGUGUGUAGUGGAUCCGCCGUGGGUUGGGAUGGAGACGAUUUUCGUGAGUCGGACGUUGACCGAGAAUGCGAGGUUACGAGUGGCCCAAGGCCCCAGAGAUUUUGUAUUUACAUCAUGUCCUCCGUUUCGACCGACGGUGGAGUAUGUCGAAAGAUCUGGAUAUUCCACCUCUUAUCCAAUUCAUGUAGGAGCUUGUUUUCCCCGUCAUCAGAUAGGGAACAGAAGCUCGGAAUAAUGGCGCAGGCAGAGGUGUUCUGUCACGCCCUCUCAAAAUUUCUGUUUCGGUUGUGUUCUAUUUCAUCGCUCAGGGCGCUCAGUUCUUAUCCCAGAUCGGGGCGAGUUCUCUCUAUUGUGACAAACAUACCGCAGUGGGACAGCCGCCCUAGGCUACGAAUUGACUACCAUCAAUUUACACCAAUUUUUCAUAACCCGCCAGGUAAACUCCUGCAGCCUAACGAUACGUGCCUGGGCUGUUCAAACUGCCUCCAGAGCUCGCCUCUGCUUUUUACCCGGGCAGGUCUUUUGGGCCUAUUCAGAACCAUGGCCCCUAUAACAUACGGCUGCAUGACUCGCUCUGCUUGGUCUUCGUUACAGCGUGGAGGGCCACUCGACGUUAUCCUCUCUACGUCGAGAGCUACCCUAUUCAAGCGGUGUGUAAGAUCACGAUUCAGAAAUCCAUGUGGUAUUAAUGUUCUCACAAACUUUCACGAACCGCGAGCACUUCUAUUUAGCGCUCCACGCGGGAAUCCGAGCUAUACGGUCAUGUUCGCCAGUACGGCAGCCACGUGCGAGCGCCUGGCGUUAGCACGUCAUCGUACUUAUUCCCGAUUCCUCUUUGAACGUACUAGAAAACAUGCGCUGAAAGGGAGAACAAGUGAUCAAGACGGCCUAAGUGCCGGUGUCACGUGGAAGGGCGUGAAUUCUGGCCGGUACCUUUAUAGCACGUGUCGUCAUGGGCUGCGCAGGUUGAUCCGGACGAUGAUGAAGCAAAUUGGAAGACUAUUUUAUAGAACGAGGUGCACGCUUCUCGUCCACAGAGACCCUGGCGCGGAACACUACCUUAGUACGCCAAUAGUAAAGCAAGGACGCGGCUACCACCGGCGUACACGACUUCCAUUUCUGCUUUUUUACGACCAAUGCCCAGCGCGCGGAGUGCCGCUAUUAGUACGCUUAGUGACCAAUGCUUUAUCGCCUUAUAUUACCAUGUCAUAUGCAUGUCAGACUUGCAACAGAGCCCAGGAGAGCGUCAGCCUAUUACCGAGUACAUGUGCUUACCCCUACCGGUCAAUCAAUUCCGAUCCUGUUGGAGCUUGGAAAGUGGGCUCCCUAAAUACGCACUACAUUUGUAAGUUACCCAAGGUAUCACCGCCGAGAUGGGCAAGCUCACAGCAUAUCGCGAGCACAGUCGUUAGAAGCGAUACCCAUAGUAGAGACGAGUCGAUCAAUGGACAUGGCAGGCUUAAAGUUGCAAUCAUUGUUUGUAGGGUAACCGCAAGAAGUGUAGCAGAAGUCGGAGGUUACUGGAAAAAAAGACACAGGAGUCCACGAAGUAUAUUUGAUAUGAAAAAUAGAGACACUUGGCACGAUGGUGGGCGCGGCCCUACAUCAUCGUCGGACCAUUAUUAUCCCAUAACAGGCAUUCCUGUUCUCAGUACUCCCUCCCGGAGGCCUCAAGCUCGGCUCACCAUUAAAUCGUCAUCAAUUUGGGCUUAUCGAGAUCAACCGAUGCUCACACAGCCAUGCAUUACGUACCCGGUACUGCUCUUGCAAUGGGCCGUAGCUUCGCGAAUGAGUGCAAUAUCUGGCAUUCGGCUUGCGGGUCUGUGGGGAGCAGCUAAUGCACCAGUCCAACUCUUCCUCUACCUCAGUCAGUGCGCACACUUAGGAACUUAUUGUGUAUAUCACGAAAUGGGCCCAAUGUAUAUGGUUCUACCAAACCAACGGCGACUGCGACGCUUUAGUCUUGGAGGACAGAUUCUAUGUUACCCCUUCAGGACGACUUACAGUCGGGCUGUCGUUAGGCCUUAUCCUGAUACGCCGCAUGGUUACAGCGGUAACGGCGUAAACACCGGCUUCCUAAGACGCUGGCCUGGACCUGUCCCGUGUCUGUGGGUUAAGGGUGUUGCCCACCACGCGUCUAAGCUACGGUGGAAGACACUUGCUUGUACUGCGUUAUCCCUGCCUGCCCUACCUAGUCACCCUGGAUUAUUGAAAAGCCUUCUCAAAAGAGGCGAAGUGAAAAAACUGGAGGCAGCUCGCACCGUCUUGCGAGCUUUACAACCGCACCGAACAAAUGGCGGAUAUACUAAGGAACUCGGUCAGGAGGAGGAGCACUGGUUCAGGUACUCAUUCGGAGGUACGAUCGGGGCCUUGUACGAUCGUAAGGUUGCUGUGUGGUACCGCAGCUCACAGGUAAUCUACAAUGGUCCUAUUUAUCGUCUAGUACAGGAGCCGAGUUGCGCCUCUCCGAUCACCUUAUUCAGCCGAGUACUACUUAAUGUUGUAUCUUAUCUAGAGAUAACGGUUAAACGACAUCUGUUCACACCAAACACCAUCCCCGGACGAGGCCUUUCUCAUCGAAAGGGGGCAUUAUUUUUCCUAAUACCACCCUAUCCAAGCUCGUUCGAAUUAAUAAGAAAACCCUACCGCCGCACACAGCCUGCUUUUCCGGGAUCCCUAGGCGAUGAUCCCUUGCUCCCCUGUAUCUGUCGGUCUAAACUGCGACUCAGACGGAUAACUGUGUAUGGUUCAAGCCGGCCAGUUGAAGACGUGGGAACCACGGAGUCUAGAUGUCCAAAAACAUUUUACUCUCUCCCGCUCGCGCUGUGUUGGUGCCGGAGUACGGGGGUGGGCAUCUACGGCUAUCUGGAACCGGACUACCCGUAUUAUACGAGGCGCGCCCCCGCCAUACCAAUUUGGAGACACCCUGUAUAUCGCGCUUUCGUACAGUUAACGUUAGCGCAGGCGACGGUACCCGGGCCGAAGCCGUUUUUAUUGCUACCCGUGGGCACCGGACCGUUUAUAAAAAUUUUCGGCCGCCACGGUUUUGCAGUUUUAGCUGCCGUACGAUAUUGUACGCUGUGCUCGGACCCUAUACGGGGACCCGACAGCCGACUUAGCCUAGUAACAGAGAGUGCUCGCCAGGUUCUCACUCCGGUCGAGUAUACCGAUCUGCAACUGUGUUCACUGGGGAGCAUUCAAAAGUCAAAACGGCUCUCAAGACUAUCCCUAACCAAAUUUGAUGAAUUAGCCGCCCGAACAAAUGCUCGGUUCGUGCGUCCCGUAGGAUAUCAACAGGUUAAGCCCCGGGUGAUUGAAACUGAAACUCCUUAUAGGACGUAUCGGCCAAACCCGCCUACAGAUGUAGACGAGGAGCACAAACAUCGUUUACUAGCUGUCAAAAGAUACAUAGGUUUCAGAGGGACACUGUCGGACAGACCCCAGGCGGCGCUCAUUAAAGGUGAAUGCAAGGCCAGCAGGUCGGGGCAUCUUCUUGAAAUUCAUAGAGGAUCAGAGAGACUUGAUUGCCGUAUCACGCUAACGCUACUUAAGGACCCACUUGGCUACUUUUACGGAGUGGACAGUCAGCCACCGGCGGUGCAUUUGAGUUACGACGCGUUCUCGCAACUCAUCAAAAACAGAUGUUUUAGAAAUUACAAGUCGCGAGCUUUCCAAGGCACAAAUGUAGCACGAAAAUCAAUAUGGGAUCGGUCAAGUGACCCUGGUUUGAGGGAGCCAUUGUGUUGGACACUAGACAAGCGCUGGGCCAAGUACACACAUCAACCUCAACCCUGCCAGCCGGUUCCCACCUCCAAUGUAUUUGAAUGCAGGCGUGGCCAAACCGAGGUACGACAUAACGCGUUGGUCUAUAGUCCAACCUUCGCGAAUUUUCGUGUAUCAGCGGACAGUACUGUCUUACUUCCAGCCACCGGGUCAUUAAUCGUUCCAUCUGGAAGGUCCGAGCGUAACCCGGAUUAUCACGCGCCGUGCUCUUUAUGUCCCAACCUCAACUCUGGUUUGCCGGGUAGGAUAGUAGGGACGCCUCGAACCGACAAGCGGCGGGCCGUCACGCAACUCAGGGUGUCCGAAGCAAGUUGCCCUCAGCGGAAUAGAUCGCCUGACUCGUGCGCACUAGGUAAAUGCCCGCUUCCGUUAGAUAACUCUACAAGCCGAUUUUGCGGCCCUUGCGCACAUUAUUCAGACCUAACCACAUUUUUACGGCUCUUAUUCUCACAGACUUCGCCCGAUGGCAGGUUUUUCCAUCAGAUAAUAGCGGUACUCAAAGUGGGUAAAUGCAUUAGAGCUACUGCAGCAUUGAACCCCGCCUCGUACCUUGCCAGCCGUGCUGCACAGUCUGGAAAUAUUGUGGAAGGUCAUCGGGGACCGAUUUUAAGCAGGAGCAUGCUAGUAAAGCGAAACUGGCGUUGUCACGGGUCCUUACCAUGCAAUAGGACGACGGGAGAAACACUUACGAUAUUAGGCAUAAUGUACGGAUCCGUGGGUGGCUCCAGAAUAUUACAAGCAGUAGUGCAUUCGGUGGCUAGACGCGCCCCGCAGGCGACCGAUGGUUUUGGGCAUUUGCUGACCAAACCGUUCGUCAGAGCCAGAACAUCAGAAGAGGAUAAAGGGUGGGUGGUGACUUCUAUAUUCCCUCGACGGAACGCCUAUGACCCACUCGGUAAAGUGGGCCCAACAUGGCGUACGCCCGGCUAUCGCAUGAUACCUCAAGCAGAUAAGUGGGGGAUCGGACCGACUAACGGUGAUACAGCCAACUGCGUAGGCGGGUGCCUCAGGGUAAUUUGCCCGUCCAGGGCAUCGAAGCAUCACGCAGCAAUAUGCUUAUCCGGCACAAGCUUCGCACGUGUGGGAAAAGGAAGAGAGGAAAAAGUCCGUCAUACGGAGUCCCAAGCGUGGACACGCUUUAAUCUGGGUAAUGCGAGGCGAGGUGGGGUGGACCAGAUUUUACGGAAAUUAACCAUCGAUAGGGGUGGGCUACGUGGGCACGCGAGGAUAAGUACGAAAUACCGGCCCCGCCUACAGAGGAAUGCCACAAUGGCCGGGAAGGAUACCCGACAUUAUUUGAGUGCUUUCAAGUUCGAACUUGCCACGCGAGCGUACAGAUCGGCGCUAAUUCUCUGGGAACUUAUCCAGAGGAGUACUAGAACGCUGGCUUAUUCUACGGGGCGGAUUGAACUCCCAACAACAGUGCCCCACUCUUCGCCCGGUGUUGUGCUAUUAGGAGUAGUGAAUUUAAGAGGAGAAGCCACACAGCAUGCCCUAUUCUCCUAUCUGGAUUCUACUACGCCCUAUGAGUGCUUAGACAUAGCCCCCAAUAGCUGGUUCACGUCCGAGUCAUCCUGGCCACGUAGCGAUGCAAUACUAUCAUACCGGUUGGUUAAUGACCCGGCUGAACUUCUUAGUGCAGGGCCAUCAACGCUAUCACACCCGCUCUGCGGAUCCAUCGGCCGCUCCUUAACACGAGGAGACAGAUUAACGAAGGACUACUACGUAGUACACAAUUUGAGCUCCUCGCUUACGCGAUUGGACCGUCAUAGUUCAGCGACGCGCAGCUUGCGACCAUGCCUGUGGGUCACAACAGAAAAUACAAUUUAUCUUCAGAGGACCUGUUUCUAUUCUGAUUGGGAUUGUAUGCGGUGCCUUUCAGACAAGGGAGGCUACGAUGGCAAUUAUUCGAGGGUAACCGCUUAUCACUAUUGUCGGCCAAAAGUUCACGAUGAGGCUACAGUGUUAUACAAACUUAAGGGUACCCCCAUACGAUUUGGUCCGGCACACAACCACAGAGGUGCCUUAGCUCUUCGUCCUGUUGAAACCACCCCCCUGAGGACAUCUCCUGAAUAUGUGGAACACCCUUACGACGAGGAGUCUAAUACAGGUCGGGGGGCAGCUCGGCAGGAAGGGCUCGAAGUUCAGCUCAUUGCAGGCCAGUACGACGCUUGGCAAUGUAUGGAUAACUGGACGGUUCACAUCAGUCGACUAUGUACCGGGGUACAGUCCCCACCGUUGGCUCGUAGAGUGUCCUAUUUAGGAAUCAGUCCGGACAUUUGGGGCCAUAGUUUUAGUUUCCGCUACACUUGGCCCUUCAAAAGCUCGACCGGGGCGAUUGAUUGGCGCCACGGGUUGUACUCCUUCCUGUCUACCUUAAUAAUCGGUUGCUGCUCACGAGCUCUGACUGAGAGAUCACGUCGAGGACCAGCCCGUUAA";
		output = proteinTranslation(exraDataSet);
		Assert.assertEquals("MPMGLVWHKQGPLERISIRGVIGVRSGYNETIRRNWVMLVSKSALFVSTCCQCNPPYLTCYKQLKSPDVTRFARAHDMDHFRDHTHMAGRTNLEQTFCAQPVHLTMDLEYYQDPPVAYVLQYMVPRRMPALSVITNPPNQELHSLWSYLHLSVSQISRGRLTCVTLLLVIWDNHLLRYSYLCQAFEMVMSSNIRSLGAETLKVLTDPNRECASVTIPHLTQQSALSIRAPPRYLHTELRRCRTSLARTTLRFVSSCTSRFGASIPSFHELYCSLYTGLSFVHISRSIKNAVDQTCGKPIDNTQIVISFQSSRLHRCSLIARLQADRTFFLYKRGWCRGVCSIVIYLTGICYVKLCCYATGISTVSDSYKPRGYVHLQVFLFRHVTVYVIRTYENSVTGASRYQADYIMGRDLPTLVDSLPVVSYSWNQYLLLVCGPRRGDLLWPLLGRDPTVKFKPRTYRQRRSFTAFMTRKCVSLWAQLTARRRTSRKLIRALTHGWKMRMSRHAVVYTGIEGILGSKTELTVPTHPLYILLPCSGPSCVLMTGVRPFWSSSQDSRWSTTIRPEGGVLSVSCRQIANSTFSVLESLGLFIEVRHGHGKIPLYRSSTCSNCSHVCQSNEWTAWFLNSPAAGPNQCQIVYNTKYCIAGYAPSPLLSTARAASYRYKCSWYFLLLFLTCSLISGQFLEPGIMKCALGMLKVGSECNLDEPHVSSTAGYHGHVNTLCCIIAVSPPLSLRVKRPAGRVVFEIGPACDQDGGQLASNIVITRNPTGWHPWTSRVSALTIRSLQCPQCVNEGWHWSHPEPGHMGRYLHPNSIPYEACVSTYTIAEKFSVHFSTRSIDWECPVRILATYTRQLELRCLTGTCFSYWNTPKIPTVTPHVARKSKETDRNASIQPPMAATVPATGLSKQWIVIQSSRDLRTDDEMDTTFQTHRYGFGISTTECYTLPSLYSAPKSRNTHTCHASPSNDSWSCFKLCGVSIRDRKRRVWTASRCNDLASEKGGRHGTPPTRIPPSLPRKTTQTGAANLAYWSQFINGDKSPDGYTKHVGTDAIYAARVQAHSLTCSRLSRIVCSGSAVGWDGDDFRESDVDRECEVTSGPRPQRFCIYIMSSVSTDGGVCRKIWIFHLLSNSCRSLFSPSSDREQKLGIMAQAEVFCHALSKFLFRLCSISSLRALSSYPRSGRVLSIVTNIPQWDSRPRLRIDYHQFTPIFHNPPGKLLQPNDTCLGCSNCLQSSPLLFTRAGLLGLFRTMAPITYGCMTRSAWSSLQRGGPLDVILSTSRATLFKRCVRSRFRNPCGINVLTNFHEPRALLFSAPRGNPSYTVMFASTAATCERLALARHRTYSRFLFERTRKHALKGRTSDQDGLSAGVTWKGVNSGRYLYSTCRHGLRRLIRTMMKQIGRLFYRTRCTLLVHRDPGAEHYLSTPIVKQGRGYHRRTRLPFLLFYDQCPARGVPLLVRLVTNALSPYITMSYACQTCNRAQESVSLLPSTCAYPYRSINSDPVGAWKVGSLNTHYICKLPKVSPPRWASSQHIASTVVRSDTHSRDESINGHGRLKVAIIVCRVTARSVAEVGGYWKKRHRSPRSIFDMKNRDTWHDGGRGPTSSSDHYYPITGIPVLSTPSRRPQARLTIKSSSIWAYRDQPMLTQPCITYPVLLLQWAVASRMSAISGIRLAGLWGAANAPVQLFLYLSQCAHLGTYCVYHEMGPMYMVLPNQRRLRRFSLGGQILCYPFRTTYSRAVVRPYPDTPHGYSGNGVNTGFLRRWPGPVPCLWVKGVAHHASKLRWKTLACTALSLPALPSHPGLLKSLLKRGEVKKLEAARTVLRALQPHRTNGGYTKELGQEEEHWFRYSFGGTIGALYDRKVAVWYRSSQVIYNGPIYRLVQEPSCASPITLFSRVLLNVVSYLEITVKRHLFTPNTIPGRGLSHRKGALFFLIPPYPSSFELIRKPYRRTQPAFPGSLGDDPLLPCICRSKLRLRRITVYGSSRPVEDVGTTESRCPKTFYSLPLALCWCRSTGVGIYGYLEPDYPYYTRRAPAIPIWRHPVYRAFVQLTLAQATVPGPKPFLLLPVGTGPFIKIFGRHGFAVLAAVRYCTLCSDPIRGPDSRLSLVTESARQVLTPVEYTDLQLCSLGSIQKSKRLSRLSLTKFDELAARTNARFVRPVGYQQVKPRVIETETPYRTYRPNPPTDVDEEHKHRLLAVKRYIGFRGTLSDRPQAALIKGECKASRSGHLLEIHRGSERLDCRITLTLLKDPLGYFYGVDSQPPAVHLSYDAFSQLIKNRCFRNYKSRAFQGTNVARKSIWDRSSDPGLREPLCWTLDKRWAKYTHQPQPCQPVPTSNVFECRRGQTEVRHNALVYSPTFANFRVSADSTVLLPATGSLIVPSGRSERNPDYHAPCSLCPNLNSGLPGRIVGTPRTDKRRAVTQLRVSEASCPQRNRSPDSCALGKCPLPLDNSTSRFCGPCAHYSDLTTFLRLLFSQTSPDGRFFHQIIAVLKVGKCIRATAALNPASYLASRAAQSGNIVEGHRGPILSRSMLVKRNWRCHGSLPCNRTTGETLTILGIMYGSVGGSRILQAVVHSVARRAPQATDGFGHLLTKPFVRARTSEEDKGWVVTSIFPRRNAYDPLGKVGPTWRTPGYRMIPQADKWGIGPTNGDTANCVGGCLRVICPSRASKHHAAICLSGTSFARVGKGREEKVRHTESQAWTRFNLGNARRGGVDQILRKLTIDRGGLRGHARISTKYRPRLQRNATMAGKDTRHYLSAFKFELATRAYRSALILWELIQRSTRTLAYSTGRIELPTTVPHSSPGVVLLGVVNLRGEATQHALFSYLDSTTPYECLDIAPNSWFTSESSWPRSDAILSYRLVNDPAELLSAGPSTLSHPLCGSIGRSLTRGDRLTKDYYVVHNLSSSLTRLDRHSSATRSLRPCLWVTTENTIYLQRTCFYSDWDCMRCLSDKGGYDGNYSRVTAYHYCRPKVHDEATVLYKLKGTPIRFGPAHNHRGALALRPVETTPLRTSPEYVEHPYDEESNTGRGAARQEGLEVQLIAGQYDAWQCMDNWTVHISRLCTGVQSPPLARRVSYLGISPDIWGHSFSFRYTWPFKSSTGAIDWRHGLYSFLSTLIIGCCSRALTERSRRGPAR", output.replace("*", ""));

		String dataSet = "AUGUUUGGAACUUUAUUGACCCUGAGGCACGUCAUAUGCGUAACGGUUGCCGAAGACCUAUCGUACGAACUGUCGCCAGUGCCUCCCAAGGGCAAUGGGGAGGGAUCGUCCUCUCCUAGGAUAGUGCCCGUGUGUGUAGAGCGGGGAUGGAGUAAAUAUGACAUAACGGGUUAUUGUCACCCUCAGGAGCUAGACGGACUCAGAGACGUUGCCGGGUGGUUAGGAUCGUUUCCCCGCUCUCGAUCGCGUUUAGUCUCUAGCAUUAGAAUCAAAGAACACAUUACGGAGCGCGCCUUCGCCAUCGCGGAUCAUCCUUCCCCAACACCAAACAGAUGUUUAAUGGGAAGUCGACCCGGCAUCCCCAGGCGCCCCCCCCAUUCGCCAAUUAGUUUAUGGUCGGAUCCCCGCGACCCAGGUGAUGUCUUGUUUGUCAACACUGCCGUAAGUGGUAAAGCGUUUCAUCCUCCGGCGGUUCAGGAUCUACAGGUGAAUUGGCACCUACACUAUUCCCACGCGAGUAGCUGCGAUAACGUAGGUUGGUUGAACUGCCGCCUGUUAUCGAUUCGACCAAGAUCGGCUUACAAUAUUUGCUCGUUCCAUGCGGUCUGCUCAUUAUUAUCCAAGCACAUAAUGACGUCUGCCCGGUUUGGACGCCCGGACAAUUUUGCUGAGCUAUGUUGGCUGGACAUCUAUCAGGCCUUUGUAUCUGACCCCAUAUAUCAAUUCAGUUCUCUUCUAUCGUUCGACGCCCAUCGUGAAGCUCUGGGGAGUUUCCAUUGGGUAGUGCUUGUUACUCAUGAGACCAGGCAUUUUGAGAGUGAAACCUCUCCCUUAAAGGGCGGGGGUUGUCCGUUCUCCCCGACGAUGUGUAAGGCUAAUGGAGGCCCCCCAGCGCAUCUGGGAAGCAGUCGCAAACGGUCGUUUAUAAAGCGCUACUACUGUGAGGUAUGUGUCAUGGUCGAACCGGAAUAUAGGCGCUUUGGCGCCGUAAUUGAGGCCAACUCUAGAUUAACGUAUACUUUUAGGAGCACACACCUGUUAAUCACGAAUGCGGGCCGAUUAUGUCAGGGGUCUCGCCACGCUCUCGCCAGACGCAGGGCCAUAACAUAUAGAUGCGAUGCCGUCUCGCUACCUACACCCUUCCCCGUUCAUCUUUUAAUUCUUCAUGUCAGAGGACGAUCGAAGGACCAUUUCUCCCACAAUAUGAUGACGAAAUACCUUAAUCUCUGUUAUAACAGAUCGAGCCUCACAAUUAUGACCUCUCGACUUUUCCAACGUUGGGCAGCUGGUGGAAGGCACGAUGAAGAUCCCCAUUGGCCAUUGGUCAAAAGAGUAGAAAUGGAAGCAGGUUUCCAGUCACCUCCCGCACUCUUAACGCAAGUAAAUACAAUCCGUAUGUCACGAGUGUCAGUAACUUGGUCUGCUUCCAGUUACAGACUAUAUAGUGCUGCCGAUAUUACUAGGGCUGCGAGACUAACCUAUCUAUUACGCGGGCCGGGUACGAUUAGAUCUAACUUGAACAGAGGCGGCCUUACAGGCCGUCAACCCUGCUCGAAACGCGAGCGAAGCGCCGUCAACCCGCAUGACGCACAUCUUCGGAAGAGUUGCGCUUUGGCUCAACUGACGAGUAAUCCGCGGCAGGGGACGCAUCUCACCCCGGACGAGGUGGGAUAUGCCCGAUCGUGCACAACUAGAGAGGCUGGAAAGUCACCGGUAUCUGUAAACGGCACGCAGGCUACCCGGGUUCUACCAACAACACUCGUAAUAGUCAUGGCGGUAGUACUAUAUCUUUGUAUCACUGACACAGUUGCAGCCUUUGUACGUUUUAGAGCACCCGGGAAAGAGAUAUCUAGUAUCUUCCAUUUGAUUUUUCUAGAUUCCGGUCCACCAAUUUUGCCUGCGUUAACAAUAAUACGCUGGAUAUUCCGGGCCUGGUGCGCGCUUUCAGCGUCACGUAAUUACGACAAGUGUAAUUCCCGCCGUACUCCUGGCACACACAAGCCGGAUUGCGUUCUCUACUUCGAAUCAGUUAGCGGGCCCCGCUGCGGACUAGUUGUGAGAGUAACCACAGGGCCGGUAAUGCUCGCAGUUGACAUAUUAUGCAGCGCACGCUUACGCCCCUCACUGUCUUGGAGUAAUCACGGUGUGGCACGGGCGUCGUUCCGGUCUCUCAACCCGUCUGCGCGCGCCCAACCCCGCCAGGCAUAUGACUCUUCGGACAACGUUCUAAUUAGAUGUAUCCAGAAGAGGGCUUUAUCAAAACUGGGAGAGCGGGGUGGUUACGGCUCUCAGACUGCGCUGGAGUAUUCGAUUAUUCGAGUGACGUCUGAUGCUCGGGUUCCACCUGCGCAGGAGGCGCGGUUAGCUAACAAUAGUCUUAUUCUUGCCAUAAACCUGGACUAUCCCCCUAGUAUGAUGAGUGUUCCUGCGGGCCAUGUCCCUUACCAAACACGGAGAAUCUUUGACGAUUCCGGAGCGAGGGGCAUCGAUCGCUUGUGUUGGCGCCUAACACAGUAUCGCUUGAGAUGUCCCUUAGGAGUGGAACGCGCGGUGGGGUAUCAUGACACAUGUUUCGACUGUCUUUACCAGAAGAGGGGUGCAAUUUAUGUGCUCUUAAGGAAGACGUCCCGAACCAUCUGCGUGGAACUCGUGUGUACCUGCCUCAUUUUCGAAAAGUCAGAAGGACCACACCCACGCAGGCACAUUGAAGGGACGUCAUGUCAGUGGCGUGAUGUGAGUGCCAGAUUCGAAAAAUAUGAGACUAUUUUGAAUCGUGCGCAAGGCUUUAGAGGGGGACCCUCCCCGUUAAGGAUAUUGGCUUCUUUGAGUAUCCCGGGUACGCUAGCAAUUGGCGCUCACCUUCAAGCGCUACUUUUCCCAAGGAGUUGCUCCAGCAAACAACAUGGCCUUUCUAUUGGAGGCCGUGCUUACCCGAUUGAUACUCGCUUAUCAUUAAGUAGGAGGGGGGUAGAGCAUCACUUCAUUACCCCUUCAGUACCCGAACAUGGGCAAGCUACUUUUAGGACUCCGAUCAGUAGUCGACUCCCCUUCUUAAGGCUUCCUCUAGAGCAAGAGAUCAUAACCACGAGCGCUAUCGGUUACUAUCUUGAGUCAAUGCAGGUCGGUAUGCUUGAUACUCAUCCCCUACCCCUCCUUGCCUGUCAAGUUCCUAAUCGGUUCUUGGUAAUUGUCAUGCUAGGUCUAACAAUUCAGUCUAAUCACUUCGUCCAUGUGGUGGAUAGGGGUGGUGGCGCUAUUUGCGCUAGUCAACGCAAUAAGAACGGUGUGAGUCCGCUGGCGAUCCACAGAAUAUCACGGGGCGCUUUCCGAAACUUAAUUGAGAAUCCAUUAGUUCACCUCCGACCAUCACGUCCCGGCCCCCCAGUAUUGCAGCAGGCUAACGCAGGUAUGGGACCUACCAUGUCCCGACACGCGGAGUUGAGGAAGCACAUCAGCAUCGAAUCUGCGUUCUCAUCUCUAAGGCGACAUCGACCGUACGGUUCUAUCAACAGUCAAGCCGUGGAGCCGGAAUAUAGACGUUCUCGAAAUAUACGUAAUUCGAAGAUUAGGACGCUCCCAACACACGGGCUUAAUGGCAUCGGUUCCAUCGGGAUGUCCUCGUUAGACGGUCUAUUUACAGACCGAGCUCGUGACGGCUGUCCAUUAUGCCGGAUAUGGACUAGGCUCGUUGCACUAGCUGAGUCUAUCGCGUACCCGGAUAACCGUGGCCCUGAAAACACGUGCAGGACCAUAUUCAGCCCGACAUCAUCCGUCGCUAAGUCGACUGACCGGGAGGUUGGCGCGAGACGGAGGCGUGGUAUACAAAUCCUCGGGACGAGGUUUGAAUGUACGAGUGCGCAAGCGGAGAGUGAUCAAAACUACUUUCCUCGUAGAUAUGUAAGACCCCGAGGGGCGUUCGCACAGGUCGAGUCCCAGCUAUGCCCUUCCAGGGCAGAUAGCCAAAAGCAGAUGAUUAUGUCCUCACCUGUGCCCGGAACCAAGGUCCCGAUCGACACUCUUGCUUCCCAAGAGCCUCGUAUCGUAUCCUACCACCAUCCGAUUCUUCGCACGCCAGUACCACGUAUGACCCCUAAUGAAGGGUUCACUAUAAGAGUCGGCACGUGCGUUUCAAGAAUGCACGAGCGCACGUUGCUUGAAUCCGACACACGUAUAUGCGUUCACAGUGAUGUACUAAGAACGAUUCAUCUUGCAGGCCCUAACAGAGCACGUGUUCCCACAGCGAAUCAUUCUUCCGUCUGUACCCUUUGGUAUACCGUAAGUCCGUUCAAGGUAACUAUGCGGUCAAACAGAUACGAGUUUUGCCGGUUCUACGACGAACAAGUAUGUGUUAAUCGUAAACAUCAAACCGUGGCGAUUAUCCAAAUUUCUGCGCGACCUAGGUGGGUGACCAUGAGGUAUGUCCAGCUAGACAUGCCGUUUCCAUUGGGCGUCACGUCUUUGACAAUCGAUAACCCCGGAGAAUUCUACUUAAUGUUAAAAAUUCAGCGAAUGCCUAAAAAUGUUUGUCCUUUUAUGUCCAUACUGGCGGCUGUAUUGUCGUGCCCUCUUAGUGACCGGAUACCGACGGGCUCACUGGCUGGGGGCGUACGAAUGCGACUCUCAUCGACUGAGUCCGUAACAUGUGUCCUACGGAGAGGGAACGGUGAAGUCCUUCGGAGUAGCGACAGAUGGACAAAAGUGUCACAGAGUUCUUCGGAGCUAUGCACAGACGAAGCAGAUAUCACCCCUUCCCCUCCGAUCGUGAACGUACUAUGCAGCCAGAUUCGACCCGCUAACGUUACCGUUGCUGAGCCUUCACAUCGGGUGAAGAUCUGGAUCCUACAUCGACGAGCCUAUCAGAAAAAUUACCAUUCUGCUUGUACAGUUGUCACUCUCCUGGGGUCCUGCAGGUACGUUAGUGUCACGCCUCAAGCCCUAGCAGUCAUUGUUUAUCUGAGGAUUAUGUUGAAGGAAACUAUGGGCGACCCGCUACGACAAAAGAUCUUAUCGCUUAGUUGUACUAGGACCUUUCGGGCUCGAAUCAGACAGCUGACAUGCCCAGUAAUUAAUAGCGCGAUAUGCGUACUCUUUCCUGGAGGCGUCCUUGGACCGAACUGCGCUUCGGGAGGUGUGGUCCUUCGUGCCAAUUUUAUCAAACCGCCACUAACUGAGUGUAAUUCAAUGGGUAAAUACCUCCCGUCUACCGGUGGUACUCGCGCCCCCAUUGGCCUGGUUGUCGUUUGUUUGCCCAGCAGGCCUAAUUUGAGAGUUUGGAAGAGUCGUCAGCGACACUUCUGCUCGCUCUUGCCCUGUCAUACCUCUCAAUUAAGGUUCGUCUUACCCUUGGCCGCCCCGCCGUCACAGUCAUGCACAUUUGCUCGGUGUAUCGUUCACCCUCCAGCUUACCCCUUAGUGACUGGCUGGUUGGGGGCCCCCUGGGUCGAACAUGUCUACGAGAGAUCCUCUUACAUAUCCGAAUAUCCUGUUGUGAGCAAGCCCUUAGGAUGGGGGAAAUUAGGUACUACCACGGUCAUAGUGAUAUACCUACUUCGCCGGUACUACUUGCCUCUACAGGUGAUCUUCCUCGGAUGCCUAUCGGUAACACAAUCUGAUCCGAUCCCCUUGUUUCCCGGCGCGCCAUUUUCCCUGCCCCCACUUUACCCUAGUAUCGAUACUACGGGGGUUUUGCUAGAAUCUUCUUUGUCGCUAAGUCGCAUUACAGAUUCUCGCAAGAUAGGCAACCCUAUUUACGAGCAAAGGAAAAAGGGCACUGUUGCGGCAGUAUGUAAAGUAACUGAAACACGCCAGAUUGCGCGAUCAGUCAGACAUCCGGCGUGGGGGUCGUUUGUGCGUACAAUGGCUUGUAUUCCCGCGGGUAUUUCAUUUUUUGACGACGCGCCGUGUCCCCCACAGGUUGCGACAAUACUGAACAGUCCAUCCCCGGGUCAUCCUCCAUUAAGACCAGGAGAACGUCUGCCACAUAGUAAUGGAUUUCGUCCCGCCAGUGCUGGGGCUGUCCGUGAUCAUAAGUCGGUGGCACAGUCAGCUCACCUCGAUCGGUGGAUAAAAAUACUUCAAAACAGGCUGCUGCCGCCGAGGCUGCAAUUAAUCUGGGGAGGCAUCGCUCGCAUACGCCUUAGCUCAUCUCAGAUAACCACUCGAAUAGUAAUAACUCUCUGUAGACAAUAUCGCGAUAAAAGAUGGGCAAUUACACUCAGAUUACCGUGCCCGCCACGAGCGGCCUUCCAUGCGACUAAUGAGCGUGUCGGUUUAGCUUUGCCCAUAAGCCGGGUGGUCGGGGCGGGUUCGUUAGCUCGCACUGUACAGCAAAAACUGAGACUCUGUCUACAAGGCUCCUCCCGGCCUGGUGUCGGUACGCACUCUGGGGGCAGUACUUACAUUGAUAUUAAUUGGCGGGGGAAAGCGGGCGGCCCUCGUAUACCAUUAAUGCGAGUAGUCACCUCACCUCGAAUAGGGUCGUGGAUGAGAACGCUACAUACCGCGAUUAAUAGAGCAACCAAGCCAGACUACAUUACAUCAGGGGUGGAGUUACUGGGUUGCUUUACUAAAAGUAGAGGUCUAAGAGCGAGUGUGCCGUCAUGCCACAUACCCCCGUUGCUAAGCGACCUCAAAGCUUUCAGUCAGGAAAUGCUUUGUCGUGUACGUAACCCAGCGCUGGUGAUGACCCAGAGGAUGAUGCUCGGGCAUCCCGCUGGUGUUAGACGCUGUUCGACGUUGGUCGAUGCGACCCUUGAAGCAGAAGUAGACGCAUCUAAGAAUGCACAUAUCACCCAUCGGGGGUCGACCCACAGUCCAAUUGCGACGCCUAGGUACGCGAGCUUAAAUAGGCUGGGAGGUUUGAACCUAUUCAUUCACACUGGUGAACUAUACCAGUUCUUAUCGGUGGCGUCACAGAGGAGACAAUACGCUCGGUUGAAAGAAAUCAAACCUUCGCGAAUUCAACCCCCCGCAGGUGCUGAAGUUGUCCCCCAAUUCAUGUCAAGGGAAGCCUUCGCGAACGACAGGCCAGUCUGUCGUUCUGCGACGAACUGGGGCCCUGCUAUAACGGUUAAUCGCGCCGCUUUCUUAAUGGUGUUGCUCUGCGGGUCACUCUGUACCUCUAACUCUUUAUUUCCUCGGGUUCAGCAGGACCCUAGAGACAGAAAGCACGCGCCAGUAAAACGUACUCAUGAAAUAUCCCAUUCUAUAACGCGCACAAACGUACUACGUACAGACGAGUGCUCUGUGUUCAGGCACGAACAAGAUGAAGAAUUGCAAAGUCCCGUCUGGAAAUGGACCCUGCGGUCGAAGGGAGGAGCAUCAACGAUCCCCGGCCAGAUUCCUGUUCAUUGCCACAAUAUACAGGCAAAGGGUCAGAUAAUACGGCCGAGCUCUCAAUGCAGCCUGCCCUCGGGGCCGAUCGGCUUCGAGGAGGCUGAAGUGGUGUCUACGACUGCAUCGUAUGAAAGAUCAUCCCUUCCGGCAUUCACCGCGGUCAGACAUAUAAGUGGUAACUACGCUACCGGUCGCUUACGUUGGGAAACUUGGGUCAAGCACCCAACCACUAGAUGGAAUACCUGUGGGCGGAACAUGGACAUCAAAUACAUCCCUUAUGUACGAGUACUUGUUAUCGCCCCCCUCUUAUACCUAGGGAGAAAAGACACGGGGGUAAAGAUUAAACGAGCGCGCAACUCCUUCACCACUAAAUUUCCGCUGGCCACCUUGUUAAUGUCGCUGUUGAAUUGCUCACGUGCACCUUACGUGCGCAAACUGGUCGCCAUAAAUGGGGCUAGCUAUAUACGAUCCUACCUGGUAAAUGUCAGACAGUGCCUACUGCACCGCUAUCCAAUUGAGCGCAGGCUCACGACUGUGGGACUCAGCAUUACCCGCAUACCACCGGGUCCUUCACAUCCGCAUGGGCGUAGAAGCCGCAAGUGUGGCAAUCGGUGCGACAUCGGAAUUACUGCACUGGUGCGAAACCCGCAGCACGUUAGCGUGCGCCUGAAGUACAGAUCACUUCUGUUCUGCUUAUGGUGGAUCACCAAGUAUGGUAAAGGUACGAACCCGAAGAGUAUUUGCUUAAUAGUCAUGGGUGGGGGGUUUCGAGCGGCUGCAUUAGGCCAUUCACGAGGCCAUUCACUAGUCGUACACCGGCCUUACAUGCGAAGUCUCAACAAGGGAGCACGCCUCGCCGCGUUGUUUGAGGCUGAACAUGCCACCAAUCAACCUGUAGGGAGGAAACCCUGUCAUGUGAUAGAUGUGAGCCCAUGGAGCUUGGCGUAUCUGAAUCCGGGAUAUUAUGGCACCGAUCUUCAGUACUCAUCCUCUUGCUACGACUCGCUUUCCCGUCUAUCUUUGCAGUGGGUGAAAACGUACUUUUCAAACAGUGCUGCUCGAGUAGGCCCACCAAGCCCAAUUUUACCGUAUAUCUUAUCUAUAUUAAGACAACCUAGAGUCACUAUCUUGACAGGGAUAUUGUCGACGCAGCCUUAUCUGCUGGAAAUACUGGGCCCGGGUCCCGUUAGCUGCAGGUGUCCCCCGAGCCAUCGCCACGCCCUGGAGCGCAUCUCCCAGGUGACAGGCAAGCCCUAUUUAAUUUCGCUUGUAAGCUUGCCACUUAGGAACAUGCCGUACCAACCACAGCGCAUAGGAAGAAGAACAAAGUUGCUCGCAGCGUUCGAGGACGUGACAACAGGUUUAACCGGUGAAAAUGGCGCUUUGAAUUUAUCUUUCCAGCAAAUAAUACGACGCUCAAGUAGCCUGCUGCGAGUGUGGUUUCCGAGUAUAACCUUCUGGUUUUUCUAUUCAUGCCCGGGGUAUGAAAGUGGCUCUGGGCUGCUAUCUGCCGCGUUCCAAGACGAGAGGGCUCGUAAAGAGGCAUGCUCACGCGAUGACUCUCAACGAAAAAGUGUGAUCCGUAUUAAAUUGCCUUUAAUUGCGACCUUGGCACUUACAGUGUGCCUGUUUGUCUUAAUACCUCAAAUAAACGGAAAUCAAUUUCUCCUGCUGGAGUCAAAUGCCUGUGACCUGGGCUCGAUGGCUACAUCUCUACGCUAUCACUCAAUUACUACAACCAGCAUUCUUGAGCCGGCACGUAGAAGCUUGUUUAGACGUCACGAGCCAGGCGGCGAAACCGCGUUCAAGGAGCGGACUUACGGCAUAACUAGCCUUGUCAGGCUUGACGAUGGGCACCCAUUAGAAACCGCCCAUGAACUAGCAAUUGGUCCUAUUACACGUACCGCUAUACCGAAUGUAAGAUUGUACGCGGUAUUGUAUUUCUGGACGACUCGUGUAUACAGCGUGCGGUACUAUGAUCGCCAAGCCAUCCUGUCCUAUUGCCCCAAAGUACAAAGAGCGCACCGAACCAUUAAUUUCAACUGCUCGAGUUCUUAUUGA";
		output = proteinTranslation(dataSet);
		System.out.println(output);
	}
	
	@Test
	public void peptideEncodingTest() {
		
		String dna = "ATGGCCATGGCCCCCAGAACTGAGATCAATAGTACCCGTATTAACGGGTGA";
		String amino = "MA";
		List<String> rto = peptideEncoding(dna, amino);
		System.out.println("Peptide encoding example:");
		for (String string : rto) {
			System.out.print(string + " ");
		}
		System.out.println("");
		
		System.out.println("Peptide encoding extra Data Set:");
		dna = "TTCGAATCCGTATTGCTTTGGTTGGTTGAGAGAGCGACCTACATTGCTAGTCAGAATAGGTGATTCACACAAAGCTTAGCACCTGGGCAGCACCCCGTGATGTAAACCTATGGGAACTAAGGGAGTCCTGCGGTTTTAGCCAGCAAGCGAGCCGGCAGGAACACTCATACCATCGGACGCGTTTGACGCCTCCCCGGAAAGGAAGTATTTGAGCCTCATTATTACGTATTGCCCGTTAGTCGACAAATCAAGCCCTCGTACGCAGCTTATTCGTACGACGTGGAGGCGTTCCCACGGGCCTAACACGATTGGAACACCACCATAGTAGTGTGGTTCAAATACCTCCTTTGGAGATCTAGAGCTTCACTCTGATTCTAGAGGCAACTTTACAATCGCTCTACGAAATTGTATGGACATCATCAACCGGATATTCTGGGGCGGTAGAATTTCTTTTGTTCGAATCGCTCTAGGCCAGGATCAAATTAATTGAATTGCGGACTCAAGGATCGCGATAGCCGACACATCGGACGCTGTAGAAAGCCAGTCTCTGGATTTAATCCACCCTCTATGTTTGACAAAGCACTAAAACGGGATAGTTTCGGGTGGTATAAGTTTCCCAAGACGATTGCATCGCAATTCATCAACAACCATGAACTTACTGTTTTAGTACTTCCACACACCTTGTTAAATTACGCCTTTACTTCATGTTGCGGTGTGTGTTAGATAGTGTGCAGCTACAAGTCTACCGCCATCGCAGCTCGGGATACCGGCAGATGAGATGGTCCTGAGCTCGTACCGGACTCAAACTTTTTCCTTTACTACCTAGGAATCGCCCATGCGAATTTGTCGGACACACACCATTACATTAACGTCACAACAGCTACTGTTAGAATTTTGCTCTTGCAAATCCTGGAAAGAGTTAAAAAAACTCTTCCGCGCGCCAATAGGGTAAATAATAGATAGCCAGACGGCTGTAAGAGGTGATGACATTTGCAACAATCATGCTGTCGCATCTTCCGCAAGTTCATGTCGCGCCTAGGCAATGGATCTGCGAATGGGGGCCACGGGGTATGAACTACGGAATTCTAAGAAAGTTGCCATCCAGAGTTAAGGGTTTGAGGCTAGTTGCATCGCTGGTAACGAACTACCTCATTACTTGGACGCGCAGTGTGACTTCACTCCTGTATAGCGATGATGCCAAGCAGGAATTAGCAAATCTGAAGAGCGTTTCCAAACTGGCCACTTGGACTGACACCTATCGCGGGGGATTTCAGCGCGTGTCGCTCTCACATGAGAGCTGCCGTCAGGAGCGGTAGAGTTTAGAGAGGAATGCGACAAACTCCCTATTCACCTCTCTGGTGATGTAAGGATATTTACGCTTAGTTCTATGCCAGGCTTAGGGCCTCTCGGAACTTTGGTGAGTCCTTATTAATTGATGCTACCTCTCCCTTACCTTCGCCCCAAGTCACGTAGAAGTACTCAATCCTGCTACATGATAATCAAATATTTCCAACGTTGGGAAATCGGTGACATCACATACTAGTTAAGAAACCACTGTCAGTGAACTTATATCCGGGGGAGAAAATCTACTAACTTACATACGCTGTGCGAGCAGTTTTCATTATAAGAAAATATACTCCCGAGGTACCGCATCAAGCACGACATTCCCGGAGAGCATAACATTTCGGTGCACCTGCTTTTGTGCGCTTGCTTGCGGTTATTTATAAACTACGCACAAGGCGCAAACCGCAGTGCGCATGTTTTCTCCGCCTGGCTAGAACTCGACATTCTCGTCAACGCCAATCTATGTGAGAGGATTTAGACCTCTGTGAAAACGAGTCCCTCTATAGAATAAATACCCAGATGCCAATGGGGGTTCTATCCGATGGCAGTGCATGGAGTGGTGGCTCCAGATTAAGGATGAGGAGAGGTAAAGATAACAGTTCGGTCGCCACGACGCGTTGCCAATCGAAATATCAGTACTAAAAGGCCCACCGCTCCGCTTTAGTCCGACTTTACATCCTGTGGAAATTGTCGAACGGAGGCTACATCGGGCTATATGAGTGTGAAAACCTATACTTCTCGCGTCGTTACTCAGTGCCGGTCTCCTGTTTCCCCCAGTCTTACGTACCCTTATTGATATTTGCTTCACGTTGAAACGTCCTAACGCAGCGTAAAGAGGTGTTTGAACCTCATTACTATAAAATCGCGATCGAAGGTAGACTACATACGCAAACGCCGAAACCCTCAGTTGGCCTTGTTGCAAGTATGGAACGTTGTAAAATTTTTCCTAGACGTTGAGCTATCGGTACAAGGTCGTTAGCGTCCTTACCCTTCACTTATATGCCCGACAAAACGCGGGTCCTAGTGCAGTGGTGGGAGCTTGGAATCCCGCAATACAAGGACAACCTGTATCTCGTTCGGCGTTCCGCGATCACTCGATCCCGAACCACTCCAAGCCTGGTTGATCAGCAAAAGCGGAAGGATGGATAAAGGGCTACTGGTTAATGGATGTAAACTTCCAATGATGAAATCCTGGAAACGAGGGATCGGGTTACGGTGGCGAACGGGGTACGGCAACGTGGCTATCTAGAGCCCGACGTTACGACTCATGTACATGCTGCTACGTGGTTGAAGCTGACGTTCAGATGAAGCAGTACTGAGTCCTAGGGCTTACTACTACTCCAATAGGTCTGGCCGGCCAGATACAAAAGTTCGTGGCGGCTCACCCCCTTTCTGGCGGGTGTAGCTTGCTGACCGGTTTGCTCGATAACACAGGCTAGCGAATAGTAATGAGGTTCGAAAACCTCTTTCCAACGACTGAAAGGGTCTACACGAACTATCTACATTTCCCCGCCCATGTCCTTCCGTCTGGTTGCTTCTGGAGATCCTTTCGCATTATACCGCAGCGTAGTGGCTCTGGCATATATGAAAAAATCCTTCTGTGGGTATTTGTGCCATCACTTATTGTTCGTACCGATATGGGATTACAAGTGCGATGTGATAATAAGCGAAGAAGCCAACATGTTACACTGTTCATGCGCTCCGGGTAATGTGCGGGCACCATGCTCAGTTCCCGCTCGCAGTTGTCACTGTCCCTGTTTCGGCACCATAATCAACATTTCCACGGCCACGCTGGTGAATAACCGAGGATACCGAAGTACAGCAAGAATGAGAGCGGGACTCCTCCATCTGCTTGTAATACGCCTTCAAGATAGTCCATAAAACGGTCGGGGTCTTGTTTCGGACTAGCCGCTTTGAAACGGTGCATAGTTGTGTCAAGTGTGGACATTGGCTTTCTATCCTCGTCAGCGATCCTCGGAAAGACTCGGGCAGTCGCCCCGAATCGTAATTAGGTAGTAGTGCGGCTCAAAAACTTCCTTCGACCTAACCGCTATAATGTTCGTAGATATAAATTTCGTTTCAGTATTAACAGGCGCACCGTATATATACGGAATGGTGTCGCCCCATTAGCTGCTCGCCAATATTTATCTAAGACCGCGCGCGTCTAGCGCCTTTAGTAGTTGCACCCGAGTATAGTAATGGGGTTCGAAGACTTCCTTCGCAAGGCTGCCATACTGTATCACAAGTACTGACGGAGCCCCGGAGGAGTGCAGGATACGGCAAAGGAGACCATTACCGGGGCATGAGTCCAAGTTAGCCCGTTAGGTGAAGGACGCTGATACAATAGTGAATCCGTTACTGAAAGGTTTAGAAGACCGGGGGGCTCGCACTAGGTCCAAATATTATGAACCCTACTCCTGCAACTGAATTGGCCGTCCAGGCGATATTTAAAAGGGGTTACTAGCAGGTTCATCGGAGCCCGTACTCCTTCCGGGCATAGTCGTTCGACGGGTAGAAATTCATCCAGTCGTGCCGGATACCCCGAGAATACCCCTATTTTTTGATCCTTCACCATCATCGTCCGCGGACTCATCTAAGTACCTCAGACCGAAACTGTTATCGTAGCGAAGAGCGAACTCGAATGACATCGCTTGTCCAACAGGGAAAATATGTAAAGTATATGCAGATTATTATAGGAAGATCACAAACTCCATCGCGCCTAGGCCAAAGACTTGCCAGAACAACATCTCTTCCAGAGCAAGGAAGTGTTTGAACCTCACTATTATCGAGAGAAGTCCCATGAATTTATAATAGTGAGGCTCAAAAACTTCCTTCATCGTCGGGCGCTGGGGCGAGCTAGGCTTCCCTAGCCGTCATTACTGTACCCACGCCAAATATTATCGAGTATGACTACGAAGCCTTCACAAGGGGCTGCAGTAACAGACTAACTCACGCACACCGCAACTACTATCCTAAATTGAGTAAGAAAACCCTCGACTATAGCCCTTGAATTAAATTCGCTATTTAAGGAAGACCGCGCTTCCGCTCGCCCGCGTATAGTTTACCAGTCCCAAGAAACATGTGTGGCCAGCCTACCTGAAGAGCTGTGTAAAGATAGATTCTGACATCCTCAAAAAGAAGTTTTCGAGCCGCACTACTACGCACGGAGCTCCGTTATTCAAGGCATGTCGAAGTACAGCGTGGTGGCCTCTCCTGTTCTCCACCCCAGCTAAACCCACCTTGTTCGAATTCGCGCAACTGTATATGACATGAACACTTACAGGGGTTAGAAGTTACTGCAACCAAGATAGAGCTCGTCGAAGTAATAGTGCGGTTCAAAAACTTCCTTCAATTGGTCTCATCACTTAAATTTAAGAGCTATTGTGAGTACAGGTACGGATGCGGCTTCAGTGGATCTTCAGCATTCATTCCTTGTAGTAATGGGGTTCGAAGACTTCCTTGCCAGGGTACCAAACAAGTCTTGCGCATCCTCCTCCCTAAGGAGGTATTTGAACCCCACTATTACCCACGATAGAACATGCAGGGTTTGATAGTGGAACACCTTTTAGAATCTGGGGATAAATTCCCAGGACTAATGTATGGCTGTAGTAATGAGGTTCAAAAACCTCCTTTTCAGGTGGATCGCAGGCCGTGCTGCCTCACAAGCTGGGACGCCGTCCACGGTATAGCCGGCGTCGGCAGTTACTGTGAAATAGCGGAAACTCGATCCCAATATATCATCTTACGTTTGGCGCCCAATAGTCGCCCAGTACCCGTTGACAGTTCTTTAACTCGGCTTAGAACTACTAGACAGGTTCAACCGAACCTTGCCCTAGTTCCCACTCCCGTAATTCATTTGGGTTTGCATCTAGAATACTGGAGGGTGCATAGACGAAACGTGTACGTCGGAGAAAACGTAAGAAAATGACCTAGACTCATAGTAGTGAGGTTCGAAGACTTCCTTTCAGTGAAATCGATCCACCACTCGCCGCGAAGAGATAATAGCATAGAGCACAAGTGCGCGAGTAGAGAAAAAGGCTATCCCAACCGGGCACGTCCTTCGTGTTTGGCGTTTACATACGGCACCCCGTTTCTGCACGTTAACCGTCTAGTATCCAACGGTGGATGGCGGACGCTAGACTATAGATATGAGATATCGAGACCTGGAGCTGGGTGTGGCTGCAGCCCGGGTCATTGCGGGCTGTGAATTCAAGGGCATGTAAACAAGCGTATATCGAACAGTGGATGGGCACCTGCAATACTCACGGTAGAGTTAGCTCACAGGATTCACGTTGAGGACTATGAGTCCCTCTTCGCTAGCAGTCTGGGGGGATATGGAGTTTAATAGCTTGACGTAGTAATGGGGCTCAAACACCTCTTTGTGTGAGCACAGCTACTTGCATTAAGAGATTCTAAACAGCGATCATCTCGGCTATTTCGGGCCAGCCTTTTCGGCAGGATGTTATGTAGCATTTCTGGAAGCTTCCCCCTCGAATCTACTAGTGGTGAGAAGATGCCCCACCGATATTACTCTTTAATCTTGAGAAACCTAAAACCGATCTGACCTCAGACGGGCGGCTCCCACCCGAGGATAAACTCGTCAATAATAATGTGGCTCGAACACTTCTTTTCTCACTAGGCTTTTACGACACGCCACATGTATTTAAGCATCTACCTAACTTGTGTCTGCTGATATACAGCGCATTCTACGCCCAACCTACCAATTACTTCAACGTAGTGCGTGGCTAAAATTCAGGGGAGCTTCATCTCTGTCTTAATTTGAAGGTTCTTCCGGGGCGTTTGGGAATCTTCGTGCCTTTTGCGAGGTTAAGGTATCAAAGAAGTTTTCGAACCACATTATTACCGCCTTAAGCACCGGCGCATCCTGCTCGTGACAACTCTACCCTGCCCTGATAAAGGCACTGAACGTTCCAGAGAGTGCATCATTGACACGCGAGCAGGCCACAGTAGCCACAAGACGTATGGGTGATTATAGAATTGGTGGAGGTGTTGTTAACGATCAGGAGGACATTAGTGGGAGTTAGGAAAGACCCTATGTTCTCTCTATCGCGGACTTGTAACTTGACAAGCAAAAGGGTAAGAGAGCTGCACACCGAAGCAGGCCCTTCCTATACCTGTTTTTCCTACGCGTAGAGAGGAATCCAGAAAGGTGATAATTGGCATTCGATGAAAAAACAGTGTGCCACTGACTTAGTTCTATATGTGAAGAGCCTGTTAGCACGTGACGGCGGCCTTGGTATAGAGCCCTTAATGGTCTCCATCGCGTAGTAATGGGGCTCGAAAACCTCCTTACTTGGGATTGCGTGGCCTCCTTGTGAGTCATACACAAGGCTTAGGGCTATGGGGCGATACACTCCTTTTCGCGGCGCATGGGGCGGTGATGCCTACATAGTAGTAGTGACTGCCTTTCTGGGGGGCTATTTGTGGATGACCAACACCTGACCAGCGATGCAATCGCTAGGGGAGGTACACCTCTCATATGTTACAACAATCACCGAATTGTGTTTCGAATTCGAATCAAGTTTGCGGTGTCGACCAGATCTGGTCTTGCTGCCATACCGGGTTCGCCGCCTCCGGTGGATAGAACTGCATCTTAAGACATCTGGACCCAGCGGTAAGTAGCGGGAAGAGTTTAGAGTCATTCGTACAACTACAGGCTAAGGGCTTACTGGGGAGTTGTTGTAGGGCATAAAGATCGCCCCATGACTTTTCGTACTTTCCCCGATAGTTCACTCGCAGCGAGCTGCGGCTGGGCTTCGCCACACGAGTACGGGCAACATTTATCTCCTCTAATCACTGGGCACCGCGCGAGGAAATAGAAAACCCTAATCAGTGCTCATGGGCGCATCTATTGGTCTCCGCATGCACGATGCCGCGGAGTGCTTAGTTGTCCCTGCATAATCTTCGTAGATGTATAAGAGATTACCTATTTATTCGGTTTCGGTTCTAGACGTACCTTGCCGCATGAGTATAGGCTAATGAACTGAGTTGGCGCCAGAGGGAAAGGCATAATAATGCGGCTCGAATACTTCCTTAAGGAAGTATTCGAACCACATTACTAT";
		amino = "KEVFEPHYY";
		rto = peptideEncoding(dna, amino);

		Assert.assertTrue(rto.size() == 20);
		System.out.println("");
		
		System.out.println("Peptide encoding Code Challenge:");
		dna = "AGTGGGCGTGACTGCTACAACAATACCCAGGCAAACTCCCATACCGGTCTGCCGGACTGAGGCGAAGCGCGGAGATATGCGGAGTCGGTTGTTCTAGGAAATTGCCAATTACCTATAGCGTTTCCAGATTACCGGAGCCATCGATCTAATGCATTGGCAAAAGATTCACGCTATTTTAGTGAATGAACAGATCCCTCCCCCATTTTCTTCGCAGCGCAGCAGACTCTGTCGAATTTCCAACCAGTCCATGCCTGCACTGAAACGGAGCATTCGCTTTAACCGTTGGCTCGTTTTGTACTTTGGGCATTGATGTAGTACGTACGCTTGCTCAGTGCGAGTGGTTAATTGCTCTCGCTAGGAGCTGTGATTACCGCTCGCGGTGCCGACCGGAGGACGTCCGTCCCTCCAGGTTTGAGAATCCTAGACAAGTGCGGTTCGAACTCTCTAGGCAATTTTGATGGCACATAGGCACAGCCGCCTACAAAACAAGCGCTATGTGTGGGGTCGGTTGTTCCAAAAAGTTACACCGCACATCGCATTCTGCATGTAGTTGTCCGATTTTTAATTAAAACGCAGGTATGTTATGTGAAGTGCGCAGTGTTAACTATTATATATGGTGGCCCCGCCATTTATTGATCCCTGACGTCACTAAGATCGAAAACTGTATAGTGTCCCTCATCTCGTAACCAATCTGTTAGAGGGTCCTCTTACCTTCGCATTCCACCCAGCATGTAGACCTTCGACGGCCGTTTATCTCTTTACGAATCGTATCCAATCGTCGCAGCGGCCACTCTAAGCTGTACACCTAGTACGCTTCTTTTCTTATCGGCGGGCTGGAACTTTCTTGAGCAGCCGACTCCCCACATTCTCGTCCATGACCTTCGTTTCTTATCTGCCAGACATGCCAGGGGCCATCGTGGTCATATAACGATTGGGGATGGTAACGATACGCCGCACGACTCGGAGGAATGAACTTCCTTGAGCAGCCCACTCCCCACATTGTCGTGTAGTTATCCGCTTTACGCAATATATAAAGTTCAGTCTCAACACTCGATTAGCGTCACTGCTACACTTTATCAATGCCGCAACTCGCTGAAATTGAGCTACATCCCTGGGTGTACACAGTCTGTCGTTGTGACCCGTCAGGCGATATTCTGAGAGGACATCATACTGGTTAAATAAGTCTACACCTCCCCTGTGACTTAACTTTTAGGTGCGTTATTCTGAGACACGTGCTAAGACGACTCTGGGAAAAGACCACCGACTTAACTGATCGATTTGACGTCAGTTGCTCGAGAACGGGACCAGGGATGTTTCCATTCACTATATACCAGCGTCTTTCCATTAGCCCGATCGGCCGGGCCCTTAGTTTGGCTTCTCAACACGGGGGCTCGCTGGCTCGTTCTCGAGAGCTCTAGCCCTAGCGCGAATCCACGAGGCGAAAATCTAGGCTGGCCATCTGGGTGAGGAGCGGTCTCAGGGCGCTGGGGGAGAATGCTGTACGGTCACGTTAGGTGTTCTAGTCCCCCTTAATGCAGGATCTCCCCTGGAAGTCAAATGGACCCAATTAGCACCTTGTTACTGTCCGGCTACCTGATGGCTATCTCTACAGCTTCCCTCAGAAGCACCGAACTTAAACCTAAAGGCCTGTTTCTGCTGACTTAGGGTTGGTTCACCGTCGTAACAAGCGCGGCAGGCTAAGAATCCTACGGCGGTTAAGAAGTTAACTGGCGGGGAGTTTCCGCCGCTGTCTGTATCCTCATATTGAACCAACAAGCGGGGCCATCAGCGTACATCCCACTTGACGGTGTGCGAGACGGTGAGCAATTTCCTTCTTCGATGGCGTGGTGTGTGATACGACGGAAGGTACGAATGTACGATGCCTAAATTGCGGACTTAGGATACTCAAAAACCCGGAGAGCCGATGTTTCCACACACAGTGTCATCCTTTTGCTGACATTTACGCTTCGCTACCACTTTGACGCTCATTGTAGGGCAGAACCGCTGAGTGCCTATGTCCGTAAACTTAAATGTTTCGTCATATACACGTCTTGTAGCTTCTATAGAGATGGCCGTTATTCAGATAGTCTTATCTACTTGTGGGTCTTTTTTTAGAAAGCAGCTACGTTGAGGCAAGCGGTTGTTTATGTCCTCTGAATCCCTGATCAACACCGAGTGCCAGGGCGTAGAAGATTGCGTCTTTCGGCTGCTCAGGTTTGCGTCGTACCAAAAATGTATATCAACTGTGTTCACTCACCGTCTACCCGGTCAGTGTAACTGCCCTTTTCTTGTTTCACGCCATATACTTGTCTCCATTTGAACATTCAATTTTGGGCCAAAGCAATTCGGAAGTACGCCGTCCTACTAAGGGCTTACGCCAGGTTTCCTCTCCGACAGTTAGACCACCCGGGAGGGATGGCAGTGTAATTTAGAGCAAGCCTGATCACCGTGTGTCCTAGACGGGATCGGTTTTGTTGGCCTAGGGTCTTTGCGGGCACCTTCGGTGCTGTTGGAGTCAACTGTGACCACCGTAGATCTGCTGACCGATCAACTGCTAACGCTTCGCGACGCGATGATTAGGTCGTACTCTTTAACTTTCTGGAGCAACCAACCCCGCACATCGGGGGGCTTTACCGCAGCGTGAACAAGTGCCGATAAGAGGTAGGGCGGTGGCTTTCACGTCCGTGGAACCGTGAATTCAGCTAACCCCATAGTCCGACATCTGCTCTTTTCTAAGTTACTAGAGAACGTAGGCCTTACGGCAGTTACCTAGCAAGCTGGGGGCCGTGGGGCTATCTTCAAGCTTAATATTTGACGGTACCGTTTCTTCTTAGTCGATTTTCGGTCTCTAGTGAGCTGAATGGCGGAGGGCCGAGATTTGAAGCCAGTCTCGAGCAGGCGACCTCAGTTCATCCACCGAGGGCGTGAAAATCAGTGCATAGGGTTCGAAAGCCGACCCACCGGAGTATGAATGGCGGGAATAGAATCCCGTGCTATATGGAAGCGGGAAAAAAACATGCTGTAGAAAAGCCGTGAATGACAGTACGCATCTTGAAAGTTCCTTTGCAGAGTGCTTGTTATAGCCGTACTCGTTAATGCACATGGAATCCCCGGCGGTGACCGTTAGTCTTTTCCTTTGGCCCCATCTAGAATTATACTCAACTGCGACTTGATGAATACGCCGATATGCGGGGTGGGTTGCTCTAAAAAATTGCTCAATAGAATTTCTTCTCACGGGGCCGCTAATCAGCGGATTGCTTCTCCCAACGTGTTGTGGATGTCGCCCGCGATTGAAAAAGAGCGGAGTTTAGGAATGTTCACCATCGACGGCTTGAATCTCTAACGTGAATGACGGAGTGATCAACCTCCGTACCTCCAAGTAGTAACCCTGACTTTCGGCGCCGCGCTGTGATTTTTTAAAGTAACACTCAAGTAGTTTACTCGTTTATGGACAAGATATTGCCCGCTTTATGTCGGCGTCCACAGTGCGGAACATCCAGCCCATATATTTGTCTTCTTAAGGGGCTTCCGTTATGTCGAAGTCCCGGTTAGCATACTCCTGCTATAACCTTAGCAAATGGAAGTCGAGAATCGCCTAAATAAGGCACCCAAGACGGCCCTTACCGACACGGACGGTGTCCATTTTAAACGCACCCTACTATGTTGACGAAGTGCCAGTATAGATATTAGGCGTTCCCTTGGGTCAGCACCCTAATATCCCAGCTAAGCGAAATCTACATCCGTATTCTCCACTGTGGTTTAAGGGATTCCGGAGGGCTAATCCGCCGGGCGCCAGTGTAGCGGTTTACAAGACAAATATGCGCCCACGGGTACCACCTTTAATCCGAAAACCGTCACATCAGCTGCCGACACAATGAGAGCAAATTCCCTAACGGGACGAAGCGAACCTTCGACTGGAACAGTAGAACTAGAAGCCTATGAATGACTGACCCCTTCGCACCCCACGACACAGATCACCGACCGACTTATTGAGGTCACTAGCCTCCTACAACATCGCCTGGGCAAGGATCGAATTGTCGCAGATCGGCGTTTCCGCATCCTCGGTGGATGCGATTCCCCATTCGACCTTCAGGGTGTGGCAAGGCAAACAGATGCCGCTGACCCCTACACCCCACACGTCAACTCAGACCCAATTGTCAGACAAGACCACGCGGTTCAACTTCACGGTACCACGGCGCTCACGGCCGTCGATAAGACGTTCGCAAATACCTCTAGAAGAGTTATTTAGCAGACCTATAGATGCACCATTCTGGTGACTGTGTAATTACGCTGTTATGATACACAAATACTAGCCCAGCGGAGTACCGCTATAATTTAACGGCGTGATATCCGTGCGTTTAAACGGTTCATCTGTAGAATGTTCCTCAAGGCAGTATTCCCTGAGCGGGGGAAGGGTGACTACTTCTGTCGTCCGGGGGATCGCTTCAATAGCTAGGGAAATTCGCCTTTCTCTCTATTCTTCCGATCCACATCTCACCCTGGGTGCTGCCGGGACATTTTCTACTCAGAAGCAGCGTGTACACTACCTAAATTTAGCTGGGCCGTACCGTAAGAACTTTCTTGAACAGCCAACTCCGCATATACATATACCTTCGCAATGGGCGCCTATCATCATCCGTGTATCAGTTGTGTGATCGAGCCTTCTGATTGTCGACAGGCCATGTGGGAAACTTCTGGTAACAGACAATCATGGAATCTCTCGAAGGACCGACTGTATAAAGTGTAACCGTGATTCGGGTGTTAAGATCCACGAGACTGGACGATAATCAGAGGTGGATTGCCCTATAGTCATGGCCTCAACGCCGGTCTGTGTACATAGATGTCCGCGCCAACATGGCCTCCCCGGCCGGTCCGGTGTAACTTTATGGAAAGGTGCGAAGAACATAATGAGAGTGGGTCAAATGAGAATCTTTCAACTCTTCTATGATCGCTGGGACGGTTCGCGGTCATGTAGGAGAATCCACCCGCCATAGACTTAGAATCAGGGACAAACCGGTTTGGCGCCGGTGACCGCGCTAAAATTCAAAGAAACTATCACGGCACGCGTGAACCAAAAATGCCAACGTGCAGTGTATCCTCCTACTGTCATGTCCATCTCCGCTTGGTTATGACGCAAAGGACGCCAGCTCGCCCATATGCTATGTGTGGTGTCGGCTGCTCGAGAAAGTTGACAATTGAGGCGCTTTCACCGACCTGGCCGTACCGTGCAGAAGGAGAATCTTGGAGGACAATCCAGCCGCAGACGAATTTGACCCTGGCCAACTAGAAAGAGACGACCGACGTAATACAGCCTTGATTGATGCAATAAGAACCATTTTCGCGGTCCCTTGACGTATAGAGGCCTGTTTGTAAAGGCAAAGAGGAACACATTCGATTGGAGGCGTTACCGTGCCTGAGTAATTGTGAATATTGTGGGACGACTATCAGTCTCATCCGAGCCACAGGTTCCAGCCATCACTCACCATGGTGACTCTACTAGTATTGGTGCGAGAGACTAGGTCACGTATGTGTGGTGTTGGTTGCTCCAAGAAATTTTCTAATTGCTGCCACCTATGCTGTACGGGGCTACATTATCGTAATCCGCGAGCCAAGGCCATGCTGTGCATACGGCATATATCCTGATGTGTCTGACGCGCCGTCCCGACTCATGGTTCTCTAGGTTGGACATGCCCACCCCACGCCAAGGCGAATATGTCGGTAAAATGCACACTCAAAAGGTGGGTGCGAGTTGACGTACATCAGACCCGTTACCACCAGCCTCACAACTTTCTCGAACAGCCGACCCCCCATATTTGCCTCACAACGCTTGCAGCGACAATGTAGGGAAGGGGCGGACGTAGGATAAACCAGGACTTAAGAGGACGTATGCGATTGGAGTTAAGAACCTTGTAGCCAAGGTTTTTTGGGAAAGGCTGACCGAAATCGGGCATGCGGATATTAGGGGCTGAACGTTAATGACTACACCAAGCTGTCCTGTAAGCCTGCCGGATTTCACAAATGTGCGGTGTCGGTTGCTCGAGAAAATTCGCGCTCTTCGAAGACAGAGAGTAGAGGAGCGGCTTTAATTCTATGACTCGTTTGTATCACGCCATTTTCGAAATCTTGTGCCCTGTGGAGCAAGTAGTCGGTAACTAGATCGATCAGCAGCACATCTGCTTACATCGGACCGTAAGAGATGGACCGAGTCATAGCGGACAAGAGTCGAGAGCAAGTTAACTCATGAACATTTTGCGGGAGCCGGAGCACTCACGTTGCGAGAGTCGTGTCCTTGCTCCCCCTCCTACAACCAAGATTGTTCTAGTCCATGAATGCCCTTAGACCTTAATACGCATGGATTTCCATCCAAAAAATGCAGGCGTGGGGTGAACTATCATAAGTGCGCCGCGCTCGCAGCAGCCTCTTGAATTTCTTAGAACAACCGACTCCCCACATTCGCAAGCAAGTCCACCTTACGTACGCTAGCGAACTATATATTGACCTAATGATTCCTATTCTCTCCATTCGGTTCCCTTGGTGCCATTGGGGATAGAGTCCCCGTTTTGTTCTGGCGCCACATTAGATACATCGGTGTGGCTTGACAAGCGTCTTCTGCTGGTTCGGTGTTCGCCCATCACTGAATACAACAGTGGGTAGCGAAATTGAGTCCATTGAGGCGGCACCGCATCTGCATCAAGCACATCTGGAACGGAGAATCGGCGGTTGTTGAAAATTAAAGTTTTCGTGTGCTACTAATAATCTTCTCAACTTCCTGGAGCAGCCTACACCTCATATTCTTTGTTTAATTCAAGTACCCGCTGAATCCGAACTGATCCCGTCGTCGTGCCCCGTTCGGTGTCGGCGAACTGAAATGTACCAGGGGGGGCCTCATCCTATAGTCTTCTTTCCGCCGTATAGAAGCGGAACATAGTATCTTCCCTCCCATCTCGGGAGGGCGGGCTTTCGTTAGGGTTAGTTTGCACGGGATAGCCTTCTTGCGAGACTTCACTGTTTGACCCAAGATATAATGGACGAGGACTCATTACACCCTTTATTCAATTTTCTCGAACAACCTACACCACATATTCGTGGGCTGTTCCAGAAAGTTGCACATCTACGTCATTATAGTGACGCAGAACGCTAACACCACCTCATTGCGCCGCGCTAACATAATATCCAATGCTCGGCAGAGGCAACGCTAGGACAGGGGATTCAGCGAATAATTTACGGAGGGTATAGGGGGTCACACGGCTACCGACAACGAAGCCTTGAGGTTGAAGACTTGGGAGACTCTTAGTGCTCCGTCGGGCTGCCGTTCCTCGGGACTACCGTCTTAATTGGGAATGTAAGTTATGAACGGACCCGTCTGAATAACCGGCTGCTACTGGCGCAGGAACCGACGGAATAAGGATTTGATTAGGTTATGCCTACCCCAGCCCACCGTAACAATGGAAGGGATGGAATCTCAAGTTTACTACGCGCCTGCGGTCCTCTCATCATTTTCTGACAGACATTTCTAATCTTATTATTGGCACTACGTCAAACAGTATAATACTTAGTGTCTAGGGGCATACTGGATCCAGATATTCGGCTCTATTCGTTCGCCATCCATTCGACAAGGATCGTGGCGATGCACGCAAATATGGGGCGTAGGCTGTTCTAGGAAATTCGAAATACTACAGGCCGATGCTGTCATGTCTTGATAATTCATATCCTGTGGTGCTGTCCCCAGCCGCCCAGGCGGGACTGTTTATTGAGGTTTAGACCCTGTGTCCCGAGGCCTAATCACCGCTCGCATCCCAGTATACCTAAGTAGTTGACGTCGAGAGGTATTCGCGTCAAAACAGATGGCGACTATAGTTCTAATTTTTTGGAGCAGCCTACCCCTCACATCGCCTTTGCACCTTTACCCAGTAGGGAAACATTACAATCGTGCAGAATCGACAGGTATCGTACGTTCTACTTTCATTAATATAAAGATGCATTAGAGGAGTGAGCCCCCTCCGTAGTGGGTCCCCGGCATAACACGCAATTTTATGCGGAGACGCGGTTTGTTTCATCAGGTACTGTAATGTGGTCGAACCCGGGACACACGTCGCGAGGGCATGTTAAGACTTGGTTTGTAATACTCTTCGGTGCACAATCGATTTATAAAGTGTACATTTCGACGCCGCTCGACTTCGTAAACTTCCTAGAACAACCGACACCCCATATCCAGACAATGATCGGAGCTGTTAGCCTAGTGTCCATTCGGTAGGAGTCTCGAAAAGGCCTCTCGATTTGAGAAGTATAAGCATAAAGCGCCAACTGAAA";
		amino = "NFLEQPTPHI";
		rto = peptideEncoding(dna, amino);
		for (String string : rto) {
			System.out.print(string + " ");
		}
		System.out.println("");
		
	}
	
	@Test
	public void numberOfCyclicSubpetidesTest() {
		//Assert.assertTrue(numberOfCyclicSubpeptides(""));
	}
	
	@Test 
	public void linearSpectrumTest() {
		Integer [] ls = linearSpectrum("IAQMLFYCKVATN");
		
		System.out.println("Linear spectrum");
		for (int i = 0; i < ls.length; i++) {
			System.out.print(ls[i] + " ");
		}
		System.out.println("");
	}
	
	@Test 
	public void cyclicSpectrumTest() {
		Integer [] ls = cyclicSpectrum("IAQMLFYCKVATN");
		System.out.println("Cyclic spectrum");
		for (int i = 0; i < ls.length; i++) {
			System.out.print(ls[i] + " ");
		}
		System.out.println("");
	}
	
	/**
	 * Protein translation implementation
	 * @param rna RNA 
	 * @return Aminoacids sequence
	 */
	private String proteinTranslation(String rna) {
		StringBuffer rto = new StringBuffer("");
		for (int i = 0; (i + 3) <= rna.length(); i += 3) {
			String tmpAmino = rna.substring(i, i + 3);
			rto.append(codonTable.get(tmpAmino));
		}

		return rto.toString();
	}
	
	/**
	 * 
	 * @param dna DNA to transcribe
	 * @return RNA for the given DNA
	 */
	private String transcribeDna(String dna) {
		return dna.replace("T", "U");
	}
	
	/**
	 * Return 6 different ways of translation from a dna to a peptide
	 * @param dna
	 * @return
	 */
	private List<String> peptideTranslation(String dna) {
		List<String> rto = new ArrayList<String>();
		String dnaComplement = OrigCTest.reverseComplementPattern(dna);
		
		String rna = transcribeDna(dna);
		String rnaComplement = transcribeDna(dnaComplement);
		
		for (int i = 0; i < 3; i ++) {
			rto.add(proteinTranslation(rna.substring(i)));
			rto.add(proteinTranslation(rnaComplement.substring(i)));
		}
		return rto;
	}
	
	/**
	 * Number of possible subpetides for a cyclic given peptide
	 * @param peptide
	 * @return
	 */
	private int numberOfCyclicSubpeptides(String peptide) {
		return peptide.length() * (peptide.length() - 1);
	}
	
	private List<String> peptideEncoding(String dna, String amino) {
		List<String> rto = new ArrayList<String>();
		
		for (int i = 0; i <= dna.length() - (amino.length() * 3); i ++) {
			String tmpDnaAmino = dna.substring(i, i + (amino.length() * 3));
			String tmpDnaAminoRC = OrigCTest.reverseComplementPattern(tmpDnaAmino);
			String tmpRnaAmino = transcribeDna(tmpDnaAmino);
			String tmpRnaAminoRC = transcribeDna(tmpDnaAminoRC);
			String protein = proteinTranslation(tmpRnaAmino);
			String proteinRC = proteinTranslation(tmpRnaAminoRC);
			
			if (protein.equals(amino) || proteinRC.equals(amino)) {
				rto.add(tmpDnaAmino);
			}
		}
		
		return rto;
	}
	
	private Integer [] linearSpectrum(String peptide) {
		int [] prefixMass = new int[peptide.length() + 1];
		prefixMass[0] = 0;
		
		for (int i = 1; i <= peptide.length(); i++) {
			prefixMass[i] = massTable.get("" + peptide.charAt(i - 1)) + prefixMass[i - 1];
		}
		
		List<Integer> linearSpectrum = new ArrayList<Integer>();
		linearSpectrum.add(0);
		for (int i = 0; i <= peptide.length() - 1; i++) {
			for (int j = i + 1; j <= peptide.length(); j++) {
				linearSpectrum.add(prefixMass[j] - prefixMass[i]);
			}
		}
		
		Integer[] linearSpectrumArr = new Integer[linearSpectrum.size()];
		int k = 0;
		for (Integer i : linearSpectrum) {
			linearSpectrumArr[k++] = i;
		}
		Arrays.sort(linearSpectrumArr);
		
		return linearSpectrumArr;
	}
	
	private Integer [] cyclicSpectrum(String peptide) {
		int [] prefixMass = new int[peptide.length() + 1];
		int peptideMass = 0;
		prefixMass[0] = 0;
		
		for (int i = 1; i <= peptide.length(); i++) {
			prefixMass[i] = massTable.get("" + peptide.charAt(i - 1)) + prefixMass[i - 1];
		}
		peptideMass = prefixMass[peptide.length()];
		
		List<Integer> linearSpectrum = new ArrayList<Integer>();
		linearSpectrum.add(0);
		for (int i = 0; i <= peptide.length() - 1; i++) {
			for (int j = i + 1; j <= peptide.length(); j++) {
				linearSpectrum.add(prefixMass[j] - prefixMass[i]);
				if (i > 0 && j < peptide.length()) {
					linearSpectrum.add(peptideMass - (prefixMass[i] - prefixMass[j]));
				}
			}
		}
		
		Integer[] linearSpectrumArr = new Integer[linearSpectrum.size()];
		int k = 0;
		for (Integer i : linearSpectrum) {
			linearSpectrumArr[k++] = i;
		}
		Arrays.sort(linearSpectrumArr);
		
		return linearSpectrumArr;
	}

	/**
	 * Reads codon table from a file
	 * @return Codon table read as map
	 */
	private static Map<String, String> readCodonTable() {
		Map<String, String> rto = new HashMap<String, String>();
		BufferedReader br = null;
		InputStream fileIs = null;
		try {
			fileIs = SequenceAntibioticsTest.class.getClassLoader().getResourceAsStream(CODON_TABLE_FILE);
			br = new BufferedReader(new InputStreamReader(fileIs));
			String line = br.readLine();
			while (line != null) {
				if (!line.trim().equals("")) {
					String [] parts = line.split(" ");
					rto.put(parts[0].trim(), parts[1].trim());
					//System.out.println(parts[0].trim() + " " + parts[1].trim());
				}
				line = br.readLine();
			}
		} catch (FileNotFoundException e) {
			Assert.fail("Error reading codon Table");
		} catch (IOException e) {
			Assert.fail("Error reading codon Table");
		} finally {
			if (br != null) {
				try {
					fileIs.close();
					br.close();
				} catch (IOException e) {
				}
			}
		}
		return rto;
	}
	
	/**
	 * Reads codon table from a file
	 * @return Codon table read as map
	 */
	private static Map<String, Integer> readMassTable() {
		Map<String, Integer> rto = new HashMap<String, Integer>();
		BufferedReader br = null;
		InputStream fileIs = null;
		try {
			fileIs = SequenceAntibioticsTest.class.getClassLoader().getResourceAsStream(MASS_TABLE_FILE);
			br = new BufferedReader(new InputStreamReader(fileIs));
			String line = br.readLine();
			while (line != null) {
				if (!line.trim().equals("")) {
					String [] parts = line.split(" ");
					rto.put(parts[0].trim(), Integer.parseInt(parts[1].trim()));
				}
				line = br.readLine();
			}
		} catch (FileNotFoundException e) {
			Assert.fail("Error reading mass Table");
		} catch (IOException e) {
			Assert.fail("Error reading mass Table");
		} finally {
			if (br != null) {
				try {
					fileIs.close();
					br.close();
				} catch (IOException e) {
				}
			}
		}
		return rto;
		
	}
}
 